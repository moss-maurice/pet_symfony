FROM php:8.2-fpm

ARG POSTGRES_VERSION=16

# Install dependencies
RUN apt-get update && apt-get install -y \
    libonig5 pkg-config libonig-dev libicu-dev libpq-dev build-essential git \
    zlib1g-dev libpcre3-dev libpng-dev libjpeg62-turbo-dev libfreetype6-dev \
    locales libzip-dev zip unzip jpegoptim optipng pngquant gifsicle make cron\
    libcurl4-openssl-dev gnupg gosu ca-certificates sqlite3 libcap2-bin \
    supervisor dnsutils librsvg2-bin libssl-dev libsasl2-dev wget \
    librdkafka-dev telnet && \
    apt-get upgrade -y && apt-get clean && rm -rf /var/lib/apt/lists/*

# PostgreSQL
RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | gpg --dearmor | tee /etc/apt/keyrings/yarn.gpg >/dev/null && \
    echo "deb [signed-by=/etc/apt/keyrings/yarn.gpg] https://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list && \
    curl -sS https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --dearmor | tee /etc/apt/keyrings/pgdg.gpg >/dev/null && \
    echo "deb [signed-by=/etc/apt/keyrings/pgdg.gpg] http://apt.postgresql.org/pub/repos/apt jammy-pgdg main" > /etc/apt/sources.list.d/pgdg.list && \
    apt-get update && apt-get install -y postgresql-client-$POSTGRES_VERSION && apt-get clean && rm -rf /var/lib/apt/lists/*

# Kafka
RUN cd /tmp && \
    wget https://github.com/edenhill/librdkafka/archive/refs/tags/v2.0.2.tar.gz -O librdkafka-2.0.2.tar.gz && \
    tar -xzf librdkafka-2.0.2.tar.gz && \
    cd librdkafka-2.0.2 && \
    ./configure && \
    make && \
    make install && \
    ldconfig

# Install PHP extensions
RUN pecl install rdkafka

# Xdebug
RUN curl -fsSL https://xdebug.org/files/xdebug-3.3.2.tgz -o xdebug.tgz && \
    mkdir -p /usr/src/xdebug && \
    tar -xf xdebug.tgz -C /usr/src/xdebug --strip-components=1 && \
    rm xdebug.tgz && \
    docker-php-source extract && \
    cd /usr/src/xdebug && \
    phpize && \
    ./configure && \
    make && \
    make install && \
    docker-php-source delete

# Install extensions
RUN docker-php-ext-install pdo pdo_mysql pdo_pgsql mbstring zip exif pcntl \
    gd opcache curl sockets && \
    docker-php-ext-enable xdebug opcache

# xhprof
RUN pecl install xhprof && \
    docker-php-ext-enable xhprof

# Install composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Symfony CLI
RUN curl -sS https://get.symfony.com/cli/installer | bash && \
    mv /root/.symfony*/bin/symfony /usr/local/bin/symfony

RUN mkdir -p /var/www/html && \
    chown -R www-data:www-data /var/www/html

WORKDIR /var/www/html

COPY ./scripts/git-config.sh /tmp
RUN ["chmod", "+x", "/tmp/git-config.sh"]

EXPOSE 9000
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
#CMD ["php-fpm"]